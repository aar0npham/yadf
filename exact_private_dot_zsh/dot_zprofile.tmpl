#!/usr/bin/env zsh


###########################################################################
#                            XDG - ZSH                                    #
###########################################################################

# XDG  config
export XDG_CONFIG_DIRS="${XDG_CONFIG_DIRS:-/etc/xdg}"
export XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-{{ .chezmoi.homedir }}/.config}"
export XDG_DATA_HOME="${XDG_DATA_HOME:-{{ .chezmoi.homedir }}/.local/share}"
export XDG_CONFIG_DOCUMENTS="{{ .chezmoi.homedir }}/documents"

# ZSH defaults
export ZDOTDIR="${ZDOTDIR:-{{ .chezmoi.homedir }}/.zsh}"
export ZHOMEDIR="$XDG_CONFIG_HOME/zsh"
export ZRCDIR=$ZHOMEDIR/rc
export ZDATADIR=$XDG_DATA_HOME/zsh

export CITY="{{ .city }}"

###########################################################################
#                            System settings                              #
###########################################################################

# Prefer CA English and use UTF-8.
export LANGUAGE='en';
export HOST='{{ .chezmoi.fullHostname }}';
export LC_ALL="en_US.UTF-8"
export LANG="en_US.UTF-8"

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";
# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

###########################################################################
#                            PATH                                         #
###########################################################################

# define PATH
export PATH="{{ .chezmoi.homedir }}/.local/bin:{{ .chezmoi.homedir }}/.cargo/bin:${PATH}"

{{ $pyenv := `command -v pyenv` }}
{{- if $pyenv}}
# export python
export PYENV_SHELL=$SHELL
export PYENV_ROOT="{{ .chezmoi.homedir }}/.pyenv"
export PATH="{{ .chezmoi.homedir }}/.pyenv/shims:$PYENV_ROOT/bin:${PATH}"
{{- end }}

{{- if `command -v npm` }}
# npm config
export NPM_PACKAGES="${HOME}/.npm-packages"
export NODE_PATH="$NPM_PACKAGES/lib/node_modules:$NODE_PATH"
export PATH="$NPM_PACKAGES/bin:${PATH}"
{{- end }}

{{- if `command -v go` }}
# defined go path
export GOPATH="{{ .chezmoi.homedir }}/go"
export GOPROXY="https://proxy.golang.org/,direct"
export PATH="$GOPATH:$GOPATH/bin:$GOPATH/src:${PATH}"
{{- end }}

{{- if `command -v gem` }}
# define Gem path
export GEMPATH="{{ .chezmoi.homedir }}/.gem/ruby/2.7.0"
export PATH="$GEMPATH/bin:${PATH}"
{{- end }}

{{- if `command -v gcloud` }}
export PATH="{{ .chezmoi.homedir }}/google-cloud-sdk/bin:${PATH}"
{{- end }}

###########################################################################
#                            Editors and others                           #
###########################################################################

if [[ ! `command -v nvim` ]]; then
    export EDITOR=$(which vim)
else
    export EDITOR=$(which nvim)
fi
export VISUAL=$EDITOR

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';
export PYTHONDONTWRITEBYTECODE=1

# tmux opts
export TMUX_OPTS="-u"

{{- if .personal }}
export LS_COLORS="${LS_COLORS}:ow=01;33"
export BROWSER='/usr/bin/firefox'
{{-   if eq .chezmoi.os "darwin" }}
export LS_OPTS="-laF -G"

# since java in macOS are handle very poorly
export PATH="/usr/local/bin:$JAVA_HOME/bin:${PATH}"
export JAVA_HOME="/usr/local/opt/openjdk/libexec/openjdk.jdk/Contents/Home"

{{-   else if eq .chezmoi.os "linux" }}
export LS_OPTS="-laFh --group-directories-first --color"
# deals with X server
# export DISPLAY=:0

# wine prefix
export WINEPREFIX="{{ .chezmoi.homedir }}/.wine32"
export WINEARCH=win32

# odoo
export ODOO_PATH="${XDG_CONFIG_DOCUMENTS}/cs/odoo"
export ODOO_OPTS="--addons-path=${XDG_CONFIG_DOCUMENTS}/cs/odoo/addons --dev=reload,all,pdb"

# qt fix
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
export QT_QPA_PLATFORMTHEME="qt5ct"

# xscecurelock with xscreensaver
export XSECURELOCK_SAVER=saver_xscreensaver xsecurelock

{{-   end }}
{{- end }}

###########################################################################
#                            Chezmoi                                      #
###########################################################################

export CHEZMOI_BIN=$(which chezmoi)
export CHEZMOI_DIR="{{ .chezmoi.sourceDir }}"
export CHEZMOI_OPTS_DRY="--verbose --debug --color on --dry-run"
export CHEZMOI_OPTS="--verbose --debug --color on"

###########################################################################
#                            Other shell application                      #
###########################################################################

{{ if `command -v fzf` }}
export FZF_DEFAULT_OPTS="--layout=reverse
                         --info=inline
                         --height=80%
                         --multi
                         --preview-window=:hidden
                         --preview '([[ -f {} ]] && (bat --style=numbers {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
                         --prompt='∼ ' --pointer='>' --marker='✓'
                         --bind '?:toggle-preview'
                         --bind 'ctrl-a:select-all'
                         --bind 'ctrl-y:execute-silent(echo {+} | pbcopy)'
                         --bind 'ctrl-e:execute(echo {+} | xargs -o vim)'
                         --bind 'ctrl-v:execute(code {+})'";
export FZF_DEFAULT_COMMAND='rg --files 
                               --no-ignore 
                               --hidden 
                               --follow 
                               -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS='--preview="cat {}" --preview-window=right:60%:wrap'
export FZF_ALT_C_OPTS='--preview="ls {}" --preview-window=right:60%:wrap'
{{ end }}

{{ if `command -v nnn` }}
export NNN_BMS='U:${XDG_CONFIG_DOCUMENTS};D:{{ .chezmoi.homedir }}/downloads/'
export NNN_SSHFS='sshfs -o reconnect,idmap=user,cache_timeout=3600'
export NNN_COLORS="2134"
export NNN_TRASH=1
export NNN_PLUG='f:finder;o:fzopen;p:mocplay;d:diffs;t:nmount;v:imgview'
export NNN_FIFO=/tmp/nnn.fifo
{{ end }}

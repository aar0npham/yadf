"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Python
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let python_highlight_all = 1

autocmd FileType python setlocal foldmethod=indent
au FileType python syn keyword pythonDecorator True None False self

au BufNewFile,BufRead *.jinja set syntax=htmljinja
au BufNewFile,BufRead *.mako set ft=mako

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" js/ts/jsx/tsx section
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
au! BufNewFile,BufRead *.prisma set filetype=graphql
au! BufNewFile,BufRead *.rasi setf css
au FileType javascript call JavaScriptFold()
au FileType javascript setl fen
au FileType javascript setl nocindent

au FileType javascript imap <C-t> $log();<esc>hi
au FileType javascript imap <C-a> alert();<esc>hi

au FileType javascript inoremap <buffer> $r return
au FileType javascript inoremap <buffer> $f // --- PH<esc>FP2xi

function! JavaScriptFold()
  setl foldmethod=syntax
  setl foldlevelstart=1
  syn region foldBraces start=/{/ end=/}/ transparent fold keepend extend

  function! FoldText()
    return substitute(getline(v:foldstart), '{.*', '{...}', '')
  endfunction
  setl foldtext=FoldText()
endfunction

" au FileType typescript setlocal formatprg=prettier\ --parser\ typescript
" au BufEnter *.{js,jsx,ts,tsx} :syntax sync fromstart
" au BufLeave *.{js,jsx,ts,tsx} :syntax sync clear


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CoffeScript
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! CoffeeScriptFold()
  setl foldmethod=indent
  setl foldlevelstart=1
endfunction
au FileType coffee call CoffeeScriptFold()

au FileType gitcommit call setpos('.', [0, 1, 1, 0])


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
au! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml
au! FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
au! FileType zsh setlocal ts=2 sts=2 sw=2 expandtab
au FileType md setlocal conceallevel=0
au FileType vim setlocal foldmethod=marker
au FileType java setlocal foldmethod=syntax
au BufRead *.twig set syntax=html filetype=html

" setup autofold
autocmd BufWinEnter * let &foldlevel = max(map(range(1, line('$')), 'foldlevel(v:val)'))

" C/C++ specific settings
autocmd FileType c,cpp,cc  set cindent comments=sr:/*,mb:*,el:*/,:// cino=>s,e0,n0,f0,{0,}0,^-1s,:0,=s,g0,h1s,p2,t0,+2,(2,)20,*30
" vim: set ft=vim.gohtmltmpl ts=2 sw=2 tw=0 et :
